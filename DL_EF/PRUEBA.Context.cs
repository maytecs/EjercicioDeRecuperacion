//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL_EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PRUEBAEntities : DbContext
    {
        public PRUEBAEntities()
            : base("name=PRUEBAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Autor> Autors { get; set; }
        public virtual DbSet<Editorial> Editorials { get; set; }
        public virtual DbSet<Genero> Generoes { get; set; }
        public virtual DbSet<Libro> Libroes { get; set; }
    
        public virtual int DeleteLibro(Nullable<int> idLibro)
        {
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("IdLibro", idLibro) :
                new ObjectParameter("IdLibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteLibro", idLibroParameter);
        }
    
        public virtual int LibroAdd(string nombreLibro, Nullable<int> idAutor, Nullable<int> numeroPaginas, string fechaPublicacion, Nullable<int> idEditorial, string edicion, Nullable<int> idGenero)
        {
            var nombreLibroParameter = nombreLibro != null ?
                new ObjectParameter("NombreLibro", nombreLibro) :
                new ObjectParameter("NombreLibro", typeof(string));
    
            var idAutorParameter = idAutor.HasValue ?
                new ObjectParameter("IdAutor", idAutor) :
                new ObjectParameter("IdAutor", typeof(int));
    
            var numeroPaginasParameter = numeroPaginas.HasValue ?
                new ObjectParameter("NumeroPaginas", numeroPaginas) :
                new ObjectParameter("NumeroPaginas", typeof(int));
    
            var fechaPublicacionParameter = fechaPublicacion != null ?
                new ObjectParameter("FechaPublicacion", fechaPublicacion) :
                new ObjectParameter("FechaPublicacion", typeof(string));
    
            var idEditorialParameter = idEditorial.HasValue ?
                new ObjectParameter("IdEditorial", idEditorial) :
                new ObjectParameter("IdEditorial", typeof(int));
    
            var edicionParameter = edicion != null ?
                new ObjectParameter("Edicion", edicion) :
                new ObjectParameter("Edicion", typeof(string));
    
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("IdGenero", idGenero) :
                new ObjectParameter("IdGenero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LibroAdd", nombreLibroParameter, idAutorParameter, numeroPaginasParameter, fechaPublicacionParameter, idEditorialParameter, edicionParameter, idGeneroParameter);
        }
    
        public virtual ObjectResult<LibroGetAll_Result> LibroGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroGetAll_Result>("LibroGetAll");
        }
    
        public virtual ObjectResult<LibroGetById_Result> LibroGetById(Nullable<int> idLibro)
        {
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("IdLibro", idLibro) :
                new ObjectParameter("IdLibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroGetById_Result>("LibroGetById", idLibroParameter);
        }
    
        public virtual ObjectResult<AutorGetAll_Result> AutorGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AutorGetAll_Result>("AutorGetAll");
        }
    
        public virtual ObjectResult<EditorialGetAll_Result> EditorialGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EditorialGetAll_Result>("EditorialGetAll");
        }
    
        public virtual ObjectResult<GeneroGetAll_Result> GeneroGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeneroGetAll_Result>("GeneroGetAll");
        }
    
        public virtual int LubroUpdate(string nombreLibro, Nullable<int> idAutor, Nullable<int> numeroPaginas, string fechaPublicacion, Nullable<int> idEditorial, string edicion, Nullable<int> idGenero, Nullable<int> idLibro)
        {
            var nombreLibroParameter = nombreLibro != null ?
                new ObjectParameter("NombreLibro", nombreLibro) :
                new ObjectParameter("NombreLibro", typeof(string));
    
            var idAutorParameter = idAutor.HasValue ?
                new ObjectParameter("IdAutor", idAutor) :
                new ObjectParameter("IdAutor", typeof(int));
    
            var numeroPaginasParameter = numeroPaginas.HasValue ?
                new ObjectParameter("NumeroPaginas", numeroPaginas) :
                new ObjectParameter("NumeroPaginas", typeof(int));
    
            var fechaPublicacionParameter = fechaPublicacion != null ?
                new ObjectParameter("FechaPublicacion", fechaPublicacion) :
                new ObjectParameter("FechaPublicacion", typeof(string));
    
            var idEditorialParameter = idEditorial.HasValue ?
                new ObjectParameter("IdEditorial", idEditorial) :
                new ObjectParameter("IdEditorial", typeof(int));
    
            var edicionParameter = edicion != null ?
                new ObjectParameter("Edicion", edicion) :
                new ObjectParameter("Edicion", typeof(string));
    
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("IdGenero", idGenero) :
                new ObjectParameter("IdGenero", typeof(int));
    
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("IdLibro", idLibro) :
                new ObjectParameter("IdLibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LubroUpdate", nombreLibroParameter, idAutorParameter, numeroPaginasParameter, fechaPublicacionParameter, idEditorialParameter, edicionParameter, idGeneroParameter, idLibroParameter);
        }
    }
}
